#!/bin/bash
# Pentesting automation script
# Written by Garv Kamra

# Check for IP/URL
if [ -z "$1" ]; then
  echo "Usage: $0 <IP/URL>"
  exit 1
fi

TARGET=$1
OUTPUT_DIR="pentest_results_$TARGET"
OUTPUT_SUBDIR="$OUTPUT_DIR/output"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")

# Create directories for results
mkdir -p "$OUTPUT_SUBDIR"
cd "$OUTPUT_SUBDIR"

# Starting banner
echo "======================================================================================="
echo "_______         _____        ________               _____               _____ "
echo "___    |____  ____  /_______ ___  __ \_____ _______ __  /______ __________  /_"
echo "__  /| |_  / / /_  __/_  __ \__  /_/ /_  _ \__  __ \_  __/_  _ \__  ___/_  __/"
echo "_  ___ |/ /_/ / / /_  / /_/ /_  ____/ /  __/_  / / // /_  /  __/_(__  ) / /_  "
echo "/_/  |_|\__,_/  \__/  \____/ /_/      \___/ /_/ /_/ \__/  \___/ /____/  \__/  "
echo "                                                                               "
echo "======================================================================================="
echo "=========================================================="
echo "                    AutoPen by Securegarv                  "
echo "=========================================================="

echo "Starting pentesting on $TARGET..."
echo "Results will be saved in $OUTPUT_SUBDIR"

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to install SQLMap if not present
install_sqlmap() {
    if ! command_exists sqlmap; then
        echo "SQLMap not found. Installing SQLMap..."
        wget https://github.com/sqlmapproject/sqlmap/archive/master.zip -O sqlmap.zip
        unzip sqlmap.zip
        cd sqlmap-master
        sudo python setup.py install
        cd ..
        rm -rf sqlmap.zip sqlmap-master
    fi
}

# Function to install Metasploit if not present
install_metasploit() {
    if ! command_exists msfconsole; then
        echo "Metasploit not found. Installing Metasploit..."
        curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall
        chmod +x msfinstall
        sudo ./msfinstall
        rm msfinstall
    fi
}

# Install necessary tools if not already installed
install_sqlmap
install_metasploit

# Nmap scan
run_nmap() {
  echo "Running Nmap scan on $TARGET..."
  nmap -sV "$TARGET" -oN "nmap_scan_$TIMESTAMP.txt"
}


# Nikto Scan
run_nikto() {
  echo "Running Nikto scan..."
  mkdir -p "$OUTPUT_SUBDIR"  # Ensure the output directory exists
  nikto -h "$TARGET" -output "$OUTPUT_SUBDIR/nikto_scan_$TIMESTAMP.txt" -T 2
  if [ $? -eq 0 ]; then
    echo "Nikto scan completed. Results saved in nikto_scan_$TIMESTAMP.txt"
  else
    echo "Nikto scan failed to write results. Check permissions or disk space."
  fi
}


# WHOIS Scan
run_whois() {
  echo "Running Whois lookup..."
  whois "$TARGET" > "whois_info_$TIMESTAMP.txt"
  if [ $? -eq 0 ]; then
    echo "Whois lookup completed. Results saved in whois_info_$TIMESTAMP.txt"
  else
    echo "Whois lookup failed."
  fi
}

# URL input for Gobuster and other URL-based tools
run_gobuster_with_url() {
  read -p "Enter the URL for gobuster (e.g., http://example.com): " URL
  echo "Running gobuster for directory enumeration on $URL..."
  gobuster dir -u "$URL" -w /usr/share/wordlists/dirb/common.txt -o "gobuster_$TIMESTAMP.txt"
  echo "$URL" > "url.txt"  # Store the URL in a file
}

# Function to get the stored URL
get_stored_url() {
  if [ -f "url.txt" ]; then
    URL=$(cat "url.txt")
    echo "$URL"
  else
    echo ""  # Return empty if file doesn't exist
  fi
}


# Metasploit scan
run_metasploit() {
  echo "Starting Metasploit Framework..."

  # Start the PostgreSQL service
  sudo service postgresql start

  # Initialize the Metasploit database
  msfdb init

  # Run Metasploit commands
  sudo msfconsole -q -x "db_nmap -sV $TARGET; vulns; services; hosts; exit" > "metasploit_$TIMESTAMP.txt"
  echo "Metasploit scan completed. Results saved in metasploit_$TIMESTAMP.txt"
}



# SQLMap scan
run_sqlmap() {
  URL=$(get_stored_url)
  if [ -n "$URL" ]; then
    echo "Running SQLMap for SQL injection testing on $URL..."
    sqlmap -u "$URL" --batch --output-dir="$OUTPUT_SUBDIR/sqlmap_results" --crawl=2 --random-agent --level=2
    echo "SQLMap scan completed. Results saved in sqlmap_results directory"
  else
    echo "No URL found in url.txt. Skipping SQLMap."
  fi
}

# Run the IP-based scans
run_nmap
run_nikto
run_whois

# User Input for URL-based scans
run_gobuster_with_url

# Run URL-based scan with the stored URL
run_sqlmap
run_metasploit

# Completion Message
echo "Pentesting Done... Results saved in the $OUTPUT_DIR directory."
